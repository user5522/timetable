name: Android Build and Artifact

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "zulu"
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Set up Flutter
        run: flutter pub get

      - name: Build APKs
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
        run: flutter build apk --release --split-per-abi

      - name: Decode Keystore
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE }}" | base64 --decode > keystore.jks

      - name: Sign APKs
        run: |
          # Define the keystore and alias
          KEYSTORE_PATH="keystore.jks"
          ALIAS="${{ secrets.SIGNING_KEY_ALIAS }}"
          KEYSTORE_PASSWORD="${{ secrets.SIGNING_KEYSTORE_PASSWORD }}"
          KEY_PASSWORD="${{ secrets.SIGNING_KEY_PASSWORD }}"

          # Create a directory for signed APKs
          mkdir -p signed_apks

          # Sign each APK
          for apk in build/app/outputs/flutter-apk/*-release.apk; do
            if [ -f "$apk" ]; then  # Check if the APK file exists
              jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore "$KEYSTORE_PATH" -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" "$apk" "$ALIAS"
              # Copy the signed APK to the signed_apks directory
              cp "$apk" "signed_apks/"
            else
              echo "No APK found for $apk"
            fi
          done

      - name: Upload Signed APKs
        uses: actions/upload-artifact@v4
        with:
          name: signed-apks
          path: signed_apks/*.apk

      - name: Clean up
        run: |
          rm keystore.jks
          rm -r signed_apks
