name: Android Build and Artifact

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "zulu"
          cache: "gradle"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - name: Set up Flutter
        run: flutter pub get
      - name: Build with Flutter
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
        run: flutter build apk --release --split-per-abi
      - name: Archive arm64-v8a
        uses: actions/upload-artifact@v4
        with:
          name: android-arm64-v8a
          path: |
            build/app/outputs/flutter-apk/*-arm64-v8a-release.apk
      - name: Archive armeabi-v7a
        uses: actions/upload-artifact@v4
        with:
          name: android-armeabi-v7a
          path: |
            build/app/outputs/flutter-apk/*-armeabi-v7a-release.apk
      - name: Archive x86_64
        uses: actions/upload-artifact@v4
        with:
          name: android-x86_64
          path: |
            build/app/outputs/flutter-apk/*-x86_64-release.apk

  sign_apk:
    name: Sign APK
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download APKs
        uses: actions/download-artifact@v4
        with:
          name: android-arm64-v8a
      - name: Download APKs
        uses: actions/download-artifact@v4
        with:
          name: android-armeabi-v7a
      - name: Download APKs
        uses: actions/download-artifact@v4
        with:
          name: android-x86_64
      - name: Decode Keystore
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE }}" | base64 --decode > keystore.jks
      - name: Sign APKs
        run: |
          # Define the keystore and alias
          KEYSTORE_PATH="keystore.jks"
          ALIAS="${{ secrets.SIGNING_KEY_ALIAS }}"
          KEYSTORE_PASSWORD="${{ secrets.SIGNING_KEYSTORE_PASSWORD }}"
          KEY_PASSWORD="${{ secrets.SIGNING_KEY_PASSWORD }}"

          # Sign each APK
          for apk in build/app/outputs/flutter-apk/*-release.apk; do
            jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore "$KEYSTORE_PATH" -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" "$apk" "$ALIAS"
          done
      - name: Clean up
        run: rm keystore.jks
